hashfunction g, h;
hashfunction C, H, MAC;
usertype mtype, gtype, htype, ctype, wtype;

protocol Group-authentication-DLP (UA , U1 , U2 )
{
    macro v1 = {KG, x1, t1, gm1, h1}k(UA, U1);
    macro v2 = {KG, x2, t2, gm2, h2}k(UA, U2);
    macro w1 = {UA, U1, gn2}KG;
    macro w2 = {UA, U2, gn1}KG;

    role UA
    {
        fresh xa, KG, r, t1, t2, m1, m2    : Nonce;
        fresh x1        : wtype;
        var C0          : ctype;
        var x1, x2      : wtype;
        var h1, h2      : htype;
        var gm1, gm2, gn2, gn1 : gtype;
        var MACA11, MACA12, MAC2, MAC2', MACA21, MACA22  : mtype;
        var C2, C2'   : ctype;
        match(gm1, g(m1));
        # compute gm2
        match(gm2, g(m2));
        match(h1, H(UA, U1, xa, t1));
        # compute h2
        match(h2, H(UA, U2, xa, t2));
        # compute C0 from r
        match(C0, C(r));
        match(MACA11, MAC(KG, UA, U1, U2, v1, r, C0));
        # compute MACA12
        match(MACA12, MAC(KG, UA, U1, U2, v2, r));
        send_1(UA, U1, U1, U2, v1, r, C0, MACA11);
        send_2(UA, U2, U1, U2, v2, r, MACA12);
        recv_4(U2, UA, gn1, gn2, C2, MAC2);
        # compute MAC2'
        match(MAC2', MAC(U2, UA, gn1, gn2, C2));
        match(MAC2, MAC2');
        # compute C2'
        # todo
        match(C2, C2');
        send_5(UA, U1, w1, MACA21);
        send_6(UA, U2, w2, MACA22);
        # check security requirements
        claim(UA, Alive);
        claim(UA, Nisynch);
        claim(UA, SKR, h(gn1, m1) );
        claim(UA, SKR, h(gn2, m2) );
    }

    role U1
    {
        var MACA11, MACA11', MAC1, MACA21, MACA21'  : mtype;
        var KG, xa, r, t1, n1   : Nonce;
        var C0, C1              : ctype;
        var h1, h1'             : htype;
        var gm1, gn1, gn2       : gtype;
        var x1                  : wtype;
        recv_1(UA, U1, U1, U2, v1, r, C0, MACA11);
        match(MACA11, MACA11');
        # calculate h1
        match(h1, H(UA, U1, xa, t1));
        match(h1, h1');
        send_3(U1, U2, gn1, C1, MAC1);
        recv_5(UA, U1, w1, MACA21);
        match(MACA21, MACA21');
        claim(U1, Alive);
        claim(U1, Nisynch);
        claim(U1, SKR, h(gm1, n1) );
        claim(U1, SKR, h(gn2, n1) );
    }

    role U2
    {
        var MACA12, MACA12', MAC2, MACA22, MACA22', MACA2 : mtype;
        var h2, h2'         : htype;
        var r, t2, KG, n2   : Nonce;
        var gm2, gn1, gn2   : gtype;
        var x2              : wtype;
        var C2              : ctype;
        recv_2(UA, U2, U1, U2, v2, r, MACA12);
        match(MACA12, MACA12');
        match(h2, h2');
        send_4(U2, UA, gn1, gn2, C2, MAC2);
        recv_6(UA, U2, w2, MACA22);
        match(MACA2, MACA22');
        claim(U2, Alive);
        claim(U2, Nisynch);
        claim(U2, SKR, KG);
        claim(U2, SKR, h(gm2, n2) );
        claim(U2, SKR, h(gn1, n2) );
    }

    role DH
    {
        var i, r: Nonce;
        recv_!1(DH, DH, h(g(r)), i);
        send_!2(DH, DH, h(g(i)), r);
    }
}
